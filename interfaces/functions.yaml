# This file is a YAML representation of the signatures of most igraph
# functions. They are currently used by some of the higher level interfaces to
# generate code using our internal tool called Stimulus
#
# See https://github.com/igraph/stimulus for more information

#######################################
# The basic interface
#######################################

igraph_empty:
    PARAMS: OUT GRAPH graph, INTEGER n=0, BOOLEAN directed=True

igraph_add_edges:
    PARAMS: INOUT GRAPH graph, VECTOR edges, ATTRIBUTES attr

igraph_add_vertices:
    PARAMS: INOUT GRAPH graph, INTEGER nv, ATTRIBUTES attr

igraph_delete_edges:
    PARAMS: INOUT GRAPH graph, EDGESET edges
    DEPS: edges ON graph

igraph_delete_vertices:
    PARAMS: INOUT GRAPH graph, VERTEXSET vertices
    DEPS: vertices ON graph

igraph_vcount:
    PARAMS: GRAPH graph
    RETURN: INTEGER

igraph_ecount:
    PARAMS: GRAPH graph
    RETURN: INTEGER

igraph_neighbors:
    PARAMS: GRAPH graph, OUT VECTOR neis, INTEGER vid, NEIMODE mode=ALL

igraph_is_directed:
    PARAMS: GRAPH graph
    RETURN: BOOLEAN

igraph_degree:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, VERTEXSET vids=ALL, NEIMODE mode=ALL,
        BOOLEAN loops
    DEPS: vids ON graph

igraph_edge:
    PARAMS: GRAPH graph, INTEGER eid, OUT INTEGERPTR from, OUT INTEGERPTR to

igraph_edges:
    PARAMS: GRAPH graph, EDGESET eids, OUT VECTOR edges
    DEPS: eids ON graph

igraph_get_eid:
    PARAMS: |-
        GRAPH graph, OUT INTEGERPTR eid, INTEGER from,
        INTEGER to, BOOLEAN directed=True, BOOLEAN error=True

igraph_get_eids:
    PARAMS: |-
        GRAPH graph, OUT VECTOR eids, VECTOR pairs,
        BOOLEAN directed=True, BOOLEAN error=True

igraph_incident:
    PARAMS: GRAPH graph, OUT VECTOR eids, INTEGER vid, NEIMODE mode=ALL

#######################################
# Constructors, deterministic
#######################################

igraph_create:
    PARAMS: OUT GRAPH graph, VECTOR edges, INTEGER n=0, BOOLEAN directed=True

igraph_adjacency:
    PARAMS: OUT GRAPH graph, MATRIX adjmatrix, ADJACENCYMODE mode=DIRECTED

igraph_weighted_adjacency:
    PARAMS: |-
        OUT GRAPH graph, MATRIX adjmatrix,
        ADJACENCYMODE mode=DIRECTED, CSTRING attr="weight",
        BOOLEAN loops

igraph_star:
    PARAMS: OUT GRAPH graph, INTEGER n, STARMODE mode=OUT, INTEGER center=0

igraph_lattice:
    PARAMS: |-
        OUT GRAPH graph, VECTOR dimvector, INTEGER nei=1,
        BOOLEAN directed=False, BOOLEAN mutual=False, BOOLEAN circular=False

igraph_ring:
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, BOOLEAN directed=False, BOOLEAN mutual=False,
        BOOLEAN circular=True

igraph_tree:
    PARAMS: OUT GRAPH graph, INTEGER n, INTEGER children=2, TREEMODE type=OUT

igraph_full:
    PARAMS: OUT GRAPH graph, INTEGER n, BOOLEAN directed=False, BOOLEAN loops=False

igraph_full_citation:
    PARAMS: OUT GRAPH graph, INTEGER n, BOOLEAN directed=True

igraph_atlas:
    PARAMS: OUT GRAPH graph, INT number=0

igraph_extended_chordal_ring:
    PARAMS: OUT GRAPH graph, INTEGER nodes, MATRIX W, BOOLEAN directed=False

igraph_connect_neighborhood:
    PARAMS: INOUT GRAPH graph, INTEGER order=2, NEIMODE mode=ALL

igraph_linegraph:
    PARAMS: GRAPH graph, OUT GRAPH linegraph

igraph_de_bruijn:
    PARAMS: OUT GRAPH graph, INTEGER m, INTEGER n

igraph_kautz:
    PARAMS: OUT GRAPH graph, INTEGER m, INTEGER n

igraph_famous:
    PARAMS: OUT GRAPH graph, CSTRING name=""

igraph_lcf_vector:
    PARAMS: OUT GRAPH graph, INTEGER n, VECTOR shifts, INTEGER repeats=1

igraph_adjlist:
    PARAMS: |-
        OUT GRAPH graph, ADJLIST adjlist, NEIMODE mode=OUT,
        BOOLEAN duplicate=True

igraph_full_bipartite:
    PARAMS: |-
        OUT GRAPH graph, OUT VECTOR_BOOL_OR_0 types, INTEGER n1,
        INTEGER n2, BOOLEAN directed=False, NEIMODE mode=ALL

#######################################
# Constructors, games
#######################################

igraph_barabasi_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, INTEGER m=1, REAL power=1.0,
        VECTOR_OR_0 outseq, BOOLEAN outpref=False, REAL A=1.0,
        BOOLEAN directed=True, BARABASI_ALGORITHM algo=BAG,
        GRAPH_OR_0 start_from=0

igraph_erdos_renyi_game_gnp:
    PARAMS: OUT GRAPH graph, INTEGER n, REAL p, BOOLEAN directed=False, BOOLEAN loops=False

igraph_erdos_renyi_game_gnm:
    PARAMS: OUT GRAPH graph, INTEGER n, REAL m, BOOLEAN directed=False, BOOLEAN loops=False

igraph_degree_sequence_game:
    PARAMS: |-
        OUT GRAPH graph, VECTOR out_deg, VECTOR_OR_0 in_deg,
        DEGSEQMODE method=SIMPLE

igraph_growing_random_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, INTEGER m=1, BOOLEAN directed=False,
        BOOLEAN citation=False

igraph_barabasi_aging_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER m=1, VECTOR_OR_0 outseq,
        BOOLEAN outpref=False, REAL pa_exp=1.0, REAL aging_exp=0.0, INTEGER aging_bin=1,
        REAL zero_deg_appeal=1.0, REAL zero_age_appeal=0.0, REAL deg_coef=1.0,
        REAL age_coef=1.0, BOOLEAN directed=True

igraph_recent_degree_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, REAL power=1.0, INTEGER window=1,
        INTEGER m=1, VECTOR_OR_0 outseq, BOOLEAN outpref=False,
        REAL zero_appeal=1.0, BOOLEAN directed=True

igraph_recent_degree_aging_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER m=1, VECTOR_OR_0 outseq,
        BOOLEAN outpref=False, REAL pa_exp=1.0, REAL aging_exp=0.0, INTEGER aging_bin=1,
        INTEGER window=1, REAL zero_appeal=1.0, BOOLEAN directed=True

igraph_callaway_traits_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER types,
        INTEGER edges_per_step=1, VECTOR type_dist, MATRIX pref_matrix,
        BOOLEAN directed=False

igraph_establishment_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER types, INTEGER k=1,
        VECTOR type_dist, MATRIX pref_matrix, BOOLEAN directed=True

igraph_grg_game:
    PARAMS: OUT GRAPH graph, INTEGER nodes, REAL radius, BOOLEAN torus=False, VECTOR_OR_0
        x, VECTOR_OR_0 y

igraph_preference_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER types,
        VECTOR type_dist, BOOLEAN fixed_sizes=False,
        MATRIX pref_matrix, OUT VECTOR node_type_vec,
        BOOLEAN directed=False, BOOLEAN loops=False

igraph_asymmetric_preference_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER types,
        MATRIX type_dist_matrix, MATRIX pref_matrix,
        OUT VECTOR node_type_in_vec, OUT VECTOR node_type_out_vec,
        BOOLEAN loops=False

igraph_rewire_edges:
    PARAMS: |-
        INOUT GRAPH graph, REAL prob, BOOLEAN loops=False,
        BOOLEAN multiple=False

igraph_watts_strogatz_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER dim, INTEGER size, INTEGER nei,
        REAL p, BOOLEAN loops=False, BOOLEAN multiple=False

igraph_lastcit_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, INTEGER edges_per_node=1,
        INTEGER agebins=1, VECTOR preference, BOOLEAN directed=True

igraph_cited_type_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, VECTOR types, VECTOR pref,
        INTEGER edges_per_step=1, BOOLEAN directed=True

igraph_citing_cited_type_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, VECTOR types, MATRIX pref,
        INTEGER edges_per_step=1, BOOLEAN directed=True

igraph_forest_fire_game:
    FLAGS: PROGRESS
    PARAMS: |-
        OUT GRAPH graph, INTEGER nodes, REAL fw_prob, REAL bw_factor=1,
        INTEGER ambs=1, BOOLEAN directed=True

igraph_simple_interconnected_islands_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER islands_n, INTEGER islands_size,
        REAL islands_pin, INTEGER n_inter

igraph_static_fitness_game:
    FLAGS: PROGRESS
    PARAMS: |-
        OUT GRAPH graph, INTEGER no_of_edges, VECTOR fitness_out,
        VECTOR_OR_0 fitness_in=NULL, BOOLEAN loops=False,
        BOOLEAN multiple=False

igraph_static_power_law_game:
    FLAGS: PROGRESS
    PARAMS: |-
        OUT GRAPH graph, INTEGER no_of_nodes, INTEGER no_of_edges,
        REAL exponent_out, REAL exponent_in=-1,
        BOOLEAN loops=False, BOOLEAN multiple=False,
        BOOLEAN finite_size_correction=True

igraph_k_regular_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER no_of_nodes, INTEGER k,
        BOOLEAN directed=False, BOOLEAN multiple=False

igraph_sbm_game:
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, MATRIX pref_matrix,
        VECTOR_INT block_sizes, BOOLEAN directed=False,
        BOOLEAN loops=False

igraph_hsbm_game:
    INTERNAL: true
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, INTEGER m,
        VECTOR rho, MATRIX C, REAL p

igraph_hsbm_list_game:
    INTERNAL: true
    PARAMS: |-
        OUT GRAPH graph, INTEGER n, VECTOR_INT mlist,
        VECTORLIST rholist, MATRIXLIST Clist, REAL p

igraph_correlated_game:
    PARAMS: |-
        GRAPH old_graph, OUT GRAPH new_graph,
        REAL corr, REAL p=old.graph$p, VECTORM1_OR_0 permutation=NULL

igraph_correlated_pair_game:
    PARAMS: |-
        OUT GRAPH graph1, OUT GRAPH graph2, INT n, REAL corr,
        REAL p, BOOLEAN directed=False,
        VECTORM1_OR_0 permutation=NULL

igraph_dot_product_game:
    PARAMS: OUT GRAPH graph, MATRIX vecs, BOOLEAN directed=False

igraph_sample_sphere_surface:
    PARAMS: |-
        INTEGER dim, INTEGER n=1, REAL radius=1,
        BOOLEAN positive=True, OUT MATRIX res

igraph_sample_sphere_volume:
    PARAMS: |-
        INTEGER dim, INTEGER n=1, REAL radius=1,
        BOOLEAN positive=True, OUT MATRIX res

igraph_sample_dirichlet:
    PARAMS: INTEGER n, VECTOR alpha, OUT MATRIX res

#######################################
# Basic query functions
#######################################

igraph_are_connected:
    PARAMS: GRAPH graph, INTEGER v1, INTEGER v2, OUT BOOLEANPTR res

#######################################
# Structural properties
#######################################

igraph_diameter:
    PARAMS: |-
        GRAPH graph, OUT REALPTR res, OUT INTEGERPTR from,
        OUT INTEGERPTR to, OUT VECTOR_OR_0 vertex_path, OUT VECTOR_OR_0 edge_path, BOOLEAN directed=True,
        BOOLEAN unconnected=True

igraph_diameter_dijkstra:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        OUT REALPTR res, OUT INTEGERPTR from,
        OUT INTEGERPTR to,  OUT VECTOR_OR_0 vertex_path, OUT VECTOR_OR_0 edge_path, BOOLEAN directed=True,
        BOOLEAN unconnected=True
    DEPS: weights ON graph

igraph_minimum_spanning_tree:
    PARAMS: GRAPH graph, OUT VECTOR res, EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph

igraph_minimum_spanning_tree_unweighted:
    PARAMS: GRAPH graph, OUT GRAPH mst

igraph_minimum_spanning_tree_prim:
    PARAMS: GRAPH graph, OUT GRAPH mst, VECTOR weights

igraph_closeness:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res,
        OUT VECTOR_OR_0 reachable_count, OUT BOOLEANPTR_OR_0 all_reachable,
        VERTEXSET vids=ALL,
        NEIMODE mode=OUT, EDGEWEIGHTS weights=NULL,
        BOOLEAN normalized=False
    DEPS: vids ON graph, weights ON graph

igraph_closeness_cutoff:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX res,
        OUT VECTOR_OR_0 reachable_count, OUT BOOLEANPTR_OR_0 all_reachable,
        VERTEXSET vids=ALL,
        NEIMODE mode=OUT, EDGEWEIGHTS weights=NULL,
        BOOLEAN normalized=False, REAL cutoff
    DEPS: vids ON graph, weights ON graph, res ON graph vids

igraph_shortest_paths:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEXSET from=ALL,
        VERTEXSET to=ALL, NEIMODE mode=OUT
    DEPS: from ON graph, to ON graph

igraph_get_shortest_paths:
    PARAMS: |-
        OUT EDGESETLIST_OR_0 edges, VERTEX from, VERTEXSET to=ALL,
        NEIMODE mode=OUT, OUT VECTOR_LONG_OR_0 predecessors=0,
        OUT VECTOR_LONG_OR_0 inbound_edges=0
    DEPS: vertices ON graph, edges ON graph, from ON graph, to ON graph

igraph_get_all_shortest_paths:
    PARAMS: |-
        OUT EDGESETLIST_OR_0 edges, OUT VECTOR_OR_0 nrgeo,
        VERTEX from, VERTEXSET to, NEIMODE mode=OUT
    DEPS: edges ON graph, from ON graph, to ON graph

igraph_shortest_paths_dijkstra:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEXSET from=ALL,
        VERTEXSET to=ALL, EDGEWEIGHTS weights, NEIMODE mode=OUT
    DEPS: from ON graph, to ON graph, weights ON graph

igraph_get_shortest_paths_dijkstra:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST_OR_0 vertices,
        OUT EDGESETLIST_OR_0 edges, VERTEX from, VERTEXSET to=ALL,
        EDGEWEIGHTS weights=NULL, NEIMODE mode=OUT,
        OUT VECTOR_LONG_OR_0 predecessors=0,
        OUT VECTOR_LONG_OR_0 inbound_edges=0
    DEPS: |-
        vertices ON graph, edges ON graph, from ON graph, to ON graph,
        weights ON graph

igraph_get_shortest_paths_bellman_ford:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST_OR_0 vertices,
        OUT EDGESETLIST_OR_0 edges, VERTEX from, VERTEXSET to=ALL,
        EDGEWEIGHTS weights=NULL, NEIMODE mode=OUT,
        OUT VECTOR_LONG_OR_0 predecessors=0,
        OUT VECTOR_LONG_OR_0 inbound_edges=0
    DEPS: |-
        vertices ON graph, edges ON graph, from ON graph, to ON graph,
        weights ON graph

igraph_get_all_shortest_paths_dijkstra:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST_OR_0 vertices, OUT EDGESETLIST_OR_0 edges, OUT VECTOR_OR_0 nrgeo,
        VERTEX from, VERTEXSET to=ALL, EDGEWEIGHTS weights,
        NEIMODE mode=OUT
    DEPS: weights ON graph, to ON graph, res ON graph, from ON graph

igraph_shortest_paths_bellman_ford:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEXSET from=ALL,
        VERTEXSET to=ALL, EDGEWEIGHTS weights, NEIMODE mode=OUT
    DEPS: from ON graph, to ON graph, weights ON graph

igraph_shortest_paths_johnson:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEXSET from=ALL,
        VERTEXSET to=ALL, EDGEWEIGHTS weights
    DEPS: from ON graph, to ON graph, weights ON graph

igraph_get_all_simple_paths:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSET_INT res, VERTEX from,
        VERTEXSET to=ALL, INTEGER cutoff=-1, NEIMODE mode=OUT
    DEPS: from ON graph, to ON graph, res ON graph

igraph_spanner:
    DEPS: from ON graph, to ON graph, res ON graph
    IGNORE: RR
    PARAMS: INT seed

igraph_subcomponent:
    PARAMS: GRAPH graph, OUT VERTEXSET res, VERTEX vid, NEIMODE mode=ALL
    DEPS: vid ON graph, res ON graph

igraph_betweenness:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, VERTEXSET vids=ALL,
        BOOLEAN directed=True, EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph, vids ON graph
    FLAGS: PROGRESS

igraph_betweenness_cutoff:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX res, VERTEXSET vids=ALL,
        BOOLEAN directed=True, EDGEWEIGHTS weights=NULL,
        REAL cutoff
    DEPS: vids ON graph, weights ON graph, res ON graph vids
    FLAGS: PROGRESS

igraph_betweenness_subset:
    DEPS: vids ON graph, weights ON graph, res ON graph vids
    FLAGS: PROGRESS
    IGNORE: RR
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX res, VERTEXSET vids=ALL,
        BOOLEAN directed=True, EDGEWEIGHTS weights=NULL

igraph_edge_betweenness:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, BOOLEAN directed=True,
        EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph

igraph_edge_betweenness_cutoff:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, BOOLEAN directed=True,
        EDGEWEIGHTS weights=NULL, REAL cutoff
    DEPS: weights ON graph

igraph_edge_betweenness_subset:
    DEPS: vids ON graph, weights ON graph, res ON graph vids
    FLAGS: PROGRESS
    IGNORE: RR
    PARAMS: BOOLEAN directed=True, EDGEWEIGHTS weights=NULL

igraph_pagerank:
    PARAMS: |-
        GRAPH graph, PAGERANKALGO algo=PRPACK,
        OUT VERTEXINDEX vector, OUT REALPTR value,
        VERTEXSET vids=ALL, BOOLEAN directed=True,
        REAL damping=0.85, EDGEWEIGHTS weights=NULL,
        INOUT PAGERANKOPT options=NULL
    DEPS: |-
        vids ON graph, weights ON graph, vector ON graph vids,
        options ON algo

igraph_personalized_pagerank:
    PARAMS: |-
        GRAPH graph, PAGERANKALGO algo=PRPACK,
        OUT VERTEXINDEX vector, OUT REALPTR value,
        VERTEXSET vids=ALL, BOOLEAN directed=True,
        REAL damping=0.85, VECTOR_OR_0 personalized=NULL,
        EDGEWEIGHTS weights=NULL,
        INOUT PAGERANKOPT options=NULL
    DEPS: |-
        vids ON graph, weights ON graph, vector ON graph vids,
        options ON algo

igraph_rewire:
    PARAMS: INOUT GRAPH rewire, INTEGER n, REWIRINGMODE mode=SIMPLE

igraph_induced_subgraph:
    PARAMS: GRAPH graph, OUT GRAPH res, VERTEXSET vids, SUBGRAPH_IMPL impl=AUTO
    DEPS: vids ON graph

igraph_subgraph_edges:
    PARAMS: GRAPH graph, OUT GRAPH res, EDGESET eids, BOOLEAN delete_vertices=True
    DEPS: eids ON graph

igraph_average_path_length:
    PARAMS: GRAPH graph, OUT REALPTR res, OUT REALPTR unconn_pairs=NULL, BOOLEAN directed=True,
        BOOLEAN unconn=True

igraph_path_length_hist:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, OUT REALPTR unconnected,
        BOOLEAN directed=True
    FLAGS: PROGRESS

igraph_simplify:
    PARAMS: |-
        INOUT GRAPH graph, BOOLEAN remove_multiple=True,
        BOOLEAN remove_loops=True,
        EDGE_ATTRIBUTE_COMBINATION edge_attr_comb=Default

igraph_transitivity_undirected:
    PARAMS: GRAPH graph, OUT REALPTR res, TRANSITIVITYMODE mode=NAN

igraph_transitivity_local_undirected:
    PARAMS: GRAPH graph, OUT VECTOR res, VERTEXSET vids=ALL, TRANSITIVITYMODE mode=NAN

igraph_transitivity_avglocal_undirected:
    PARAMS: GRAPH graph, OUT REALPTR res, TRANSITIVITYMODE mode=NAN

igraph_transitivity_barrat:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, VERTEXSET vids=ALL,
        EDGEWEIGHTS weights=NULL, TRANSITIVITYMODE mode=NAN
    DEPS: res ON graph, vids ON graph, weights ON graph

igraph_reciprocity:
    PARAMS: |-
        GRAPH graph, OUT REALPTR res, BOOLEAN ignore_loops=True,
        RECIP mode=Default

igraph_constraint:
    PARAMS: GRAPH graph, OUT VECTOR res, VERTEXSET vids=ALL, VECTOR_OR_0 weights
    DEPS: vids ON graph

igraph_maxdegree:
    PARAMS: |-
        GRAPH graph, OUT INTEGERPTR res, VERTEXSET vids=ALL, NEIMODE mode=ALL,
        BOOLEAN loops=True
    DEPS: vids ON graph

igraph_density:
    PARAMS: GRAPH graph, OUT REALPTR res, BOOLEAN loops=False

igraph_neighborhood_size:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, VERTEXSET vids, INTEGER order,
        NEIMODE mode=ALL, INTEGER mindist=0
    DEPS: vids ON graph

igraph_neighborhood:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST res,
        VERTEXSET vids, INTEGER order,
        NEIMODE mode=ALL, INTEGER mindist=0
    DEPS: res ON graph, vids ON graph

igraph_neighborhood_graphs:
    PARAMS: |-
        GRAPH graph, OUT GRAPHLIST res, VERTEXSET vids,
        INTEGER order,
        NEIMODE mode=ALL, INTEGER mindist=0
    DEPS: vids ON graph

igraph_topological_sorting:
    PARAMS: GRAPH graph, OUT VECTOR_INT res, NEIMODE mode=OUT

igraph_is_loop:
    PARAMS: GRAPH graph, OUT VECTOR_BOOL res, EDGESET es=ALL
    DEPS: es ON graph

igraph_is_dag:
    PARAMS: GRAPH graph, OUT BOOLEANPTR res

igraph_is_simple:
    PARAMS: GRAPH graph, OUT BOOLEANPTR res

igraph_is_multiple:
    PARAMS: GRAPH graph, OUT VECTOR_BOOL res, EDGESET es=ALL
    DEPS: es ON graph

igraph_has_multiple:
    PARAMS: GRAPH graph, OUT BOOLEANPTR res

igraph_count_multiple:
    PARAMS: GRAPH graph, OUT VECTOR res, EDGESET es=ALL
    DEPS: es ON graph

igraph_girth:
    PARAMS: GRAPH graph, OUT INTEGERPTR girth, OUT VERTEXSET circle
    DEPS: circle ON graph

igraph_is_perfect:
    IGNORE: RR, RC, RNamespace
    PARAMS: GRAPH graph, OUT BOOLEANPTR res

igraph_add_edge:
    PARAMS: INOUT GRAPH graph, INTEGER from, INTEGER to

igraph_eigenvector_centrality:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX vector, OUT REALPTR value,
        BOOLEAN directed=False, BOOLEAN scale=True,
        EDGEWEIGHTS weights=NULL,
        INOUT ARPACKOPT options=arpack_defaults
    DEPS: weights ON graph, vector ON graph V(graph)

igraph_hub_score:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX vector, OUT REALPTR value,
        BOOLEAN scale=True, EDGEWEIGHTS weights=NULL,
        INOUT ARPACKOPT options=arpack_defaults
    DEPS: weights ON graph, vector ON graph V(graph)

igraph_authority_score:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX vector, OUT REALPTR value,
        BOOLEAN scale=True, EDGEWEIGHTS weights=NULL,
        INOUT ARPACKOPT options=arpack_defaults
    DEPS: weights ON graph, vector ON graph V(graph)

igraph_arpack_rssolve:
    PARAMS: |-
        ARPFUNC fun, EXTRA extra, INOUT ARPACKOPT options=arpack_defaults,
        NULL storage, OUT VECTOR_OR_0 values,
        OUT MATRIX_OR_0 vectors

igraph_arpack_rnsolve:
    PARAMS: |-
        ARPFUNC fun, EXTRA extra, INOUT ARPACKOPT options=arpack_defaults,
        NULL storage, OUT VECTOR_OR_0 values,
        OUT MATRIX_OR_0 vectors

igraph_arpack_unpack_complex:
    PARAMS: INOUT MATRIX vectors, INOUT MATRIX values, INTEGER nev

igraph_unfold_tree:
    PARAMS: |-
        GRAPH graph, OUT GRAPH tree, NEIMODE mode=ALL, VECTOR roots,
        OUT VECTORM1_OR_0 vertex_index

igraph_is_mutual:
    PARAMS: GRAPH graph, OUT VECTOR_BOOL res, EDGESET es=ALL
    DEPS: es ON graph

igraph_maximum_cardinality_search:
    PARAMS: GRAPH graph, OUT VERTEXSET alpha, OUT VECTORM1_OR_0 alpham1
    DEPS: alpha ON graph, alpham1 ON graph

igraph_is_chordal:
    PARAMS: |-
        GRAPH graph, VECTORM1_OR_0 alpha=NULL, VECTORM1_OR_0 alpham1=NULL,
        OUT BOOLEANPTR_OR_0 chordal, OUT VECTORM1_OR_0 fillin,
        OUT GRAPH_OR_0 newgraph

igraph_avg_nearest_neighbor_degree:
    PARAMS: |-
        GRAPH graph, VERTEXSET vids=ALL,
        NEIMODE mode=ALL, NEIMODE neighbor_degree_mode=ALL,
        OUT VERTEXINDEX_OR_0 knn, OUT VECTOR_OR_0 knnk,
        EDGEWEIGHTS weights=NULL
    DEPS: vids ON graph, weights ON graph, knn ON graph vids

igraph_strength:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX res, VERTEXSET vids=ALL,
        NEIMODE mode=ALL, BOOLEAN loops=True, EDGEWEIGHTS weights=NULL
    DEPS: vids ON graph, weights ON graph, res ON graph vids

igraph_centralization:
    PARAMS: VECTOR scores, REAL theoretical_max=0, BOOLEAN normalized=True
    RETURN: REAL

igraph_centralization_degree:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res,
        NEIMODE mode=ALL, BOOLEAN loops=True,
        OUT REALPTR centralization, OUT REALPTR theoretical_max,
        BOOLEAN normalized=True

igraph_centralization_degree_tmax:
    PARAMS: |-
        GRAPH_OR_0 graph=NULL, INTEGER nodes=0, NEIMODE mode=ALL,
        BOOLEAN loops=False, OUT REALPTR res

igraph_centralization_betweenness:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res,
        BOOLEAN directed=True,
        OUT REALPTR centralization,
        OUT REALPTR theoretical_max,
        BOOLEAN normalized=True

igraph_centralization_betweenness_tmax:
    PARAMS: |-
        GRAPH_OR_0 graph=NULL, INTEGER nodes=0,
        BOOLEAN directed=True, OUT REALPTR res

igraph_centralization_closeness:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res,
        NEIMODE mode=OUT, OUT REALPTR centralization,
        OUT REALPTR theoretical_max,
        BOOLEAN normalized=True

igraph_centralization_closeness_tmax:
    PARAMS: |-
        GRAPH_OR_0 graph=NULL, INTEGER nodes=0,
        NEIMODE mode=OUT, OUT REALPTR res

igraph_centralization_eigenvector_centrality:
    PARAMS: |-
        GRAPH graph, OUT VECTOR vector, OUT REALPTR value,
        BOOLEAN directed=False, BOOLEAN scale=True,
        INOUT ARPACKOPT options=arpack_defaults,
        OUT REALPTR centralization, OUT REALPTR theoretical_max,
        BOOLEAN normalized=True

igraph_centralization_eigenvector_centrality_tmax:
    PARAMS: |-
        GRAPH_OR_0 graph=NULL, INTEGER nodes=0,
        BOOLEAN directed=False, BOOLEAN scale=True,
        OUT REALPTR res

igraph_assortativity_nominal:
    PARAMS: |-
        GRAPH graph, VECTORM1 types, OUT REALPTR res,
        BOOLEAN directed=True

igraph_assortativity:
    PARAMS: |-
        GRAPH graph, VECTOR types1, VECTOR_OR_0 types2=NULL,
        OUT REALPTR res, BOOLEAN directed=True

igraph_assortativity_degree:
    PARAMS: GRAPH graph, OUT REALPTR res, BOOLEAN directed=True

igraph_contract_vertices:
    PARAMS: |-
        INOUT GRAPH graph, VECTORM1 mapping,
        VERTEX_ATTRIBUTE_COMBINATION vertex_attr_comb=Default

igraph_eccentricity:
    PARAMS: |-
        GRAPH graph, OUT VERTEXINDEX res, VERTEXSET vids=ALL,
        NEIMODE mode=ALL
    DEPS: vids ON graph, res ON graph vids

igraph_radius:
    PARAMS: GRAPH graph, OUT REALPTR radius, NEIMODE mode=ALL

igraph_pseudo_diameter:
    NAME-R: pseudo_diameter
    PARAMS: |-
        GRAPH graph, OUT REALPTR diameter, INTEGER start_vid,
        OUT INTEGERPTR from=NULL, OUT INTEGERPTR to=NULL

igraph_diversity:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL, OUT VERTEXINDEX res,
        VERTEXSET vids=ALL
    DEPS: weights ON graph, vids ON graph, res ON graph vids

igraph_random_walk:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSET walk, VERTEX start, NEIMODE mode=OUT,
        INTEGER steps, RWSTUCK stuck=RETURN
    DEPS: start ON graph, walk ON graph

#######################################
# Degree sequences
#######################################

igraph_is_bigraphical:
    PARAMS: |-
        VECTOR_INT degrees1, VECTOR_INT degrees2,
        EDGE_TYPE_SW allowed_edge_types=SIMPLE, OUT BOOLEANPTR res

igraph_is_degree_sequence:
    PARAMS: VECTOR_INT out_deg, VECTOR_INT_OR_0 in_deg=NULL, OUT BOOLEANPTR res
    FLAGS: DEPRECATED

igraph_is_graphical:
    PARAMS: |-
        VECTOR_INT out_deg, VECTOR_INT_OR_0 in_deg=NULL,
        EDGE_TYPE_SW allowed_edge_types=SIMPLE, OUT BOOLEANPTR res

igraph_is_graphical_degree_sequence:
    PARAMS: VECTOR_INT out_deg, VECTOR_INT_OR_0 in_deg=NULL, OUT BOOLEANPTR res
    FLAGS: DEPRECATED

#######################################
# Visitors
#######################################

igraph_bfs:
    PARAMS: |-
        GRAPH graph, INTEGER root, VECTOR_OR_0 roots,
        NEIMODE mode=OUT, BOOLEAN unreachable,
        VECTOR_OR_0 restricted,
        OUT VECTOR_OR_0 order, OUT VECTOR_OR_0 rank,
        OUT VECTOR_OR_0 father,
        OUT VECTOR_OR_0 pred, OUT VECTOR_OR_0 succ,
        OUT VECTOR_OR_0 dist, BFS_FUNC callback, NULL extra

igraph_dfs:
    PARAMS: |-
        GRAPH graph, INTEGER root, NEIMODE mode=OUT,
        BOOLEAN unreachable,
        OUT VECTOR_OR_0 order, OUT VECTOR_OR_0 order_out,
        OUT VECTOR_OR_0 dist, DFS_FUNC in_callback,
        DFS_FUNC out_callback, NULL extra

#######################################
# Bipartite graphs
#######################################

igraph_bipartite_projection_size:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES types=NULL,
        OUT INTEGERPTR vcount1, OUT INTEGERPTR ecount1,
        OUT INTEGERPTR vcount2, OUT INTEGERPTR ecount2
    DEPS: types ON graph

igraph_bipartite_projection:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES types=NULL,
        OUT GRAPH proj1, OUT GRAPH proj2,
        OUT VECTOR_OR_0 multiplicity1,
        OUT VECTOR_OR_0 multiplicity2, INTEGER probe1=-1
    DEPS: types ON graph

igraph_create_bipartite:
    PARAMS: |-
        OUT GRAPH graph, IN VECTOR_BOOL types,
        VECTORM1 edges, BOOLEAN directed=False

igraph_incidence:
    PARAMS: |-
        OUT GRAPH graph, OUT VECTOR_BOOL types, MATRIX incidence,
        BOOLEAN directed=False, NEIMODE mode=ALL,
        BOOLEAN multiple=False

igraph_get_incidence:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES types=NULL, OUT MATRIX res,
        OUT VECTOR_OR_0 row_ids, OUT VECTOR_OR_0 col_ids
    DEPS: types ON graph

igraph_is_bipartite:
    PARAMS: GRAPH graph, OUT BOOLEANPTR res, OUT VECTOR_BOOL_OR_0 type

igraph_bipartite_game_gnp:
    PARAMS: |-
        OUT GRAPH graph, OUT VECTOR_BOOL_OR_0 types,
        INTEGER n1, INTEGER n2, REAL p, BOOLEAN directed,
        NEIMODE mode

igraph_bipartite_game_gnm:
    PARAMS: |-
        OUT GRAPH graph, OUT VECTOR_BOOL_OR_0 types,
        INTEGER n1, INTEGER n2, INTEGER m, BOOLEAN directed,
        NEIMODE mode

#######################################
# Spectral properties
#######################################

igraph_laplacian:
    PARAMS: |-
        GRAPH graph, OUT MATRIX_OR_0 res,
        OUT SPARSEMAT_OR_0 sparseres, BOOLEAN normalized=False,
        EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph

#######################################
# Components
#######################################

igraph_clusters:
    PARAMS: |-
        GRAPH graph, OUT VECTOR_INT membership, OUT VECTOR_INT csize,
        OUT INTEGERPTR no, CONNECTEDNESS mode=WEAK

igraph_is_connected:
    PARAMS: GRAPH graph, OUT BOOLEANPTR res, CONNECTEDNESS mode=WEAK

igraph_decompose:
    PARAMS: |-
        GRAPH graph, OUT GRAPHLIST components, CONNECTEDNESS mode=WEAK,
        INTEGER maxcompno=-1, INTEGER minelements=1

igraph_articulation_points:
    PARAMS: GRAPH graph, OUT VERTEXSET res
    DEPS: res ON graph

igraph_biconnected_components:
    PARAMS: |-
        GRAPH graph, OUT INTEGERPTR no,
        OUT EDGESETLIST_OR_0 tree_edges,
        OUT EDGESETLIST_OR_0 component_edges,
        OUT VERTEXSETLIST_OR_0 components,
        OUT VERTEXSET articulation_points
    DEPS: |-
        tree_edges ON graph, component_edges ON graph,
        components ON graph, articulation_points ON graph

#######################################
# Cliques
#######################################

igraph_cliques:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST res, INTEGER min_size=0,
        INTEGER max_size=0
    DEPS: res ON graph

igraph_largest_cliques:
    PARAMS: GRAPH graph, OUT VERTEXSETLIST res
    DEPS: res ON graph

igraph_maximal_cliques:
    PARAMS: GRAPH graph, OUT VERTEXSETLIST res
    DEPS: res ON graph

igraph_maximal_cliques_count:
    PARAMS: |-
        GRAPH graph, OUT INTEGERPTR no, INTEGER min_size=0,
        INTEGER max_size=0

igraph_maximal_cliques_file:
    PARAMS: |-
        GRAPH graph, OUTFILE res, INTEGER min_size=0,
        INTEGER max_size=0

igraph_clique_number:
    PARAMS: GRAPH graph, OUT INTEGERPTR no

igraph_independent_vertex_sets:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST res, INTEGER min_size=0,
        INTEGER max_size=0
    DEPS: res ON graph

igraph_largest_independent_vertex_sets:
    PARAMS: GRAPH graph, OUT VERTEXSETLIST res
    DEPS: res ON graph

igraph_maximal_independent_vertex_sets:
    PARAMS: GRAPH graph, OUT VERTEXSETLIST res
    DEPS: res ON graph

igraph_independence_number:
    PARAMS: GRAPH graph, OUT INTEGERPTR no

#######################################
# Layouts
#######################################

igraph_layout_random:
    PARAMS: GRAPH graph, OUT MATRIX res

igraph_layout_circle:
    PARAMS: GRAPH graph, OUT MATRIX res, VERTEXSET order=ALL
    DEPS: order ON graph

igraph_layout_star:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEX center=V(graph)[1],
        VECTORM1_OR_0 order=NULL
    DEPS: center ON graph

igraph_layout_grid:
    PARAMS: GRAPH graph, OUT MATRIX res, INTEGER width=0

igraph_layout_grid_3d:
    PARAMS: GRAPH graph, OUT MATRIX res, INTEGER width=0, INTEGER height=0

igraph_layout_fruchterman_reingold:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX coords=NULL,
        BOOLEAN use_seed=False, INTEGER niter=500,
        REAL start_temp=sqrt(vcount(graph)),
        LAYOUT_GRID grid=AUTO, EDGEWEIGHTS weights=NULL,
        VECTOR_OR_0 minx=NULL, VECTOR_OR_0 maxx=NULL,
        VECTOR_OR_0 miny=NULL, VECTOR_OR_0 maxy=NULL,
        DEPRECATED coolexp, DEPRECATED maxdelta, DEPRECATED area,
        DEPRECATED repulserad
    DEPS: weights ON graph
    FLAGS: PROGRESS

igraph_layout_kamada_kawai:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX coords, BOOLEAN use_seed=False,
        INTEGER maxiter=500, REAL epsilon=0.0,
        REAL kkconst=vcount(graph), EDGEWEIGHTS weights=NULL,
        VECTOR_OR_0 minx=NULL, VECTOR_OR_0 maxx=NULL,
        VECTOR_OR_0 miny=NULL, VECTOR_OR_0 maxy=NULL
    DEPS: weights ON graph

igraph_layout_lgl:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, INTEGER maxiter=150, REAL maxdelta=VCOUNT(graph),
        REAL area=VCOUNT(graph)^2, REAL coolexp=1.5, REAL repulserad=VCOUNT(graph)^3, REAL cellsize=VCOUNT(graph),
        INTEGER root=-1

igraph_layout_reingold_tilford:
    PARAMS: GRAPH graph, OUT MATRIX res, NEIMODE mode=OUT, VECTOR roots

igraph_layout_reingold_tilford_circular:
    PARAMS: GRAPH graph, OUT MATRIX res, NEIMODE mode=OUT, VECTOR roots

igraph_layout_random_3d:
    PARAMS: GRAPH graph, OUT MATRIX res

igraph_layout_sphere:
    PARAMS: GRAPH graph, OUT MATRIX res

igraph_layout_fruchterman_reingold_3d:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX coords=NULL,
        BOOLEAN use_seed=False, INTEGER niter=500,
        REAL start_temp=sqrt(vcount(graph)),
        EDGEWEIGHTS weights=NULL,
        VECTOR_OR_0 minx=NULL, VECTOR_OR_0 maxx=NULL,
        VECTOR_OR_0 miny=NULL, VECTOR_OR_0 maxy=NULL,
        VECTOR_OR_0 minz=NULL, VECTOR_OR_0 maxz=NULL,
        DEPRECATED coolexp, DEPRECATED maxdelta, DEPRECATED area,
        DEPRECATED repulserad
    DEPS: weights ON graph
    FLAGS: PROGRESS

igraph_layout_kamada_kawai_3d:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX coords, BOOLEAN use_seed=False,
        INTEGER maxiter=500, REAL epsilon=0.0,
        REAL kkconst=vcount(graph), EDGEWEIGHTS weights=NULL,
        VECTOR_OR_0 minx=NULL, VECTOR_OR_0 maxx=NULL,
        VECTOR_OR_0 miny=NULL, VECTOR_OR_0 maxy=NULL,
        VECTOR_OR_0 minz=NULL, VECTOR_OR_0 maxz=NULL
    DEPS: weights ON graph

igraph_layout_graphopt:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX res, INTEGER niter=500,
        REAL node_charge=0.001, REAL node_mass=30,
        INTEGER spring_length=0, REAL spring_constant=1,
        REAL max_sa_movement=5, NULL use_seed
    FLAGS: PROGRESS

igraph_layout_drl:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX res, BOOLEAN use_seed=False,
        DRL_OPTIONS options=drl_defaults$default, VECTOR_OR_0 weights=NULL,
        VECTOR_BOOL_OR_0 fixed=NULL

igraph_layout_drl_3d:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX res, BOOLEAN use_seed=False,
        DRL_OPTIONS options=drl_defaults$default, VECTOR_OR_0 weights=NULL,
        VECTOR_BOOL_OR_0 fixed=NULL

igraph_layout_merge_dla:
    PARAMS: GRAPHLIST graphs, MATRIXLIST coords, OUT MATRIX res

igraph_layout_sugiyama:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, OUT GRAPH_OR_0 extd_graph,
        OUT VECTORM1_OR_0 extd_to_orig_eids,
        VECTORM1_OR_0 layers=NULL,
        REAL hgap=1, REAL vgap=1, INTEGER maxiter=100,
        EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph

igraph_layout_mds:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, MATRIX_OR_0 dist=NULL, INTEGER dim=2

igraph_layout_bipartite:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES types=NULL, OUT MATRIX res,
        REAL hgap=1, REAL vgap=1, INTEGER maxiter=100
    DEPS: types ON graph

igraph_layout_gem:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX res=matrix(),
        BOOLEAN use_seed=False,
        INTEGER maxiter=40*vcount(graph)^2,
        REAL temp_max=vcount(graph),
        REAL temp_min=1/10, REAL temp_init=sqrt(vcount(graph))

igraph_layout_davidson_harel:
    PARAMS: |-
        GRAPH graph, INOUT MATRIX res=matrix(),
        BOOLEAN use_seed=False, INTEGER maxiter=10,
        INTEGER fineiter=FINEITER, REAL cool_fact=0.75,
        REAL weight_node_dist=1.0, REAL weight_border=0.0,
        REAL weight_edge_lengths=ELENW,
        REAL weight_edge_crossings=ECROSSW,
        REAL weight_node_edge_dist=NEDISTW

#######################################
# Cocitation and other similarity measures
#######################################

igraph_cocitation:
    PARAMS: GRAPH graph, OUT MATRIX res, VERTEXSET vids=ALL
    DEPS: vids ON graph

igraph_bibcoupling:
    PARAMS: GRAPH graph, OUT MATRIX res, VERTEXSET vids=ALL
    DEPS: vids ON graph

igraph_similarity_jaccard:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEXSET vids=ALL, NEIMODE mode=ALL,
        BOOLEAN loops=False
    DEPS: vids ON graph res, mode ON vids

igraph_similarity_dice:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, VERTEXSET vids=ALL, NEIMODE mode=ALL,
        BOOLEAN loops=False
    DEPS: vids ON graph

igraph_similarity_inverse_log_weighted:
    PARAMS: GRAPH graph, OUT MATRIX res, VERTEXSET vids=ALL, NEIMODE mode=ALL
    DEPS: vids ON graph

#######################################
# Community structure
#######################################

igraph_compare_communities:
    PARAMS: |-
        VECTOR_INT comm1, VECTOR_INT comm2, OUT REALPTR res,
        COMMCMP method=VI

igraph_community_spinglass:
    PARAMS: |-
        GRAPH graph, VECTOR_OR_0 weights, OUT REALPTR modularity,
        OUT REALPTR temperature, OUT VECTOR_INT membership, OUT VECTOR_INT csize,
        INTEGER spins=25, BOOLEAN parupdate=False, REAL starttemp=1, REAL stoptemp=0.01,
        REAL coolfact=0.99, SPINCOMMUPDATE update_rule=CONFIG, REAL gamma=1.0,
        REAL gamma_minus=0, REAL d_p=0, REAL d_n=0

igraph_community_spinglass_single:
    PARAMS: |-
        GRAPH graph, VECTOR_OR_0 weights, INTEGER vertex, OUT VECTOR_INT community,
        OUT REALPTR cohesion, OUT REALPTR adhesion,
        OUT INTEGERPTR inner_links, OUT INTEGERPTR outer_links,
        INTEGER spins=25, SPINCOMMUPDATE update_rule=CONFIG, REAL gamma=1.0

igraph_community_walktrap:
    PARAMS: |-
        GRAPH graph, VECTOR weights, INT steps=4, OUT MATRIX merges,
        OUT VECTOR modularity, OUT VECTOR_INT membership

igraph_community_edge_betweenness:
    PARAMS: |-
        GRAPH graph, OUT VECTOR result, OUT VECTOR edge_betweenness,
        OUT MATRIX merges, OUT VECTOR bridges,
        OUT VECTOR_OR_0 modularity, OUT VECTOR_INT_OR_0 membership,
        BOOLEAN directed=True, EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph

igraph_community_eb_get_merges:
    PARAMS: |-
        GRAPH graph, VECTOR edges, EDGEWEIGHTS weights=NULL,
        OUT MATRIX merges, OUT VECTOR bridges,
        OUT VECTOR_OR_0 modularity, OUT VECTOR_INT_OR_0 membership
    DEPS: weights ON graph

igraph_community_fastgreedy:
    PARAMS: |-
        GRAPH graph, VECTOR_OR_0 weights, OUT MATRIX merges, OUT VECTOR modularity,
        OUT VECTOR_INT_OR_0 membership

igraph_community_to_membership:
    PARAMS: |-
        GRAPH graph, MATRIX merges, INTEGER steps,
        OUT VECTOR_INT membership, OUT VECTOR_INT csize

igraph_le_community_to_membership:
    PARAMS: |-
        MATRIX merges, INTEGER steps, INOUT VECTOR_INT membership,
        OUT VECTOR_INT_OR_0 csize

igraph_modularity:
    PARAMS: |-
        GRAPH graph, VECTOR membership, IN VECTOR_OR_0 weights=NULL,
        REAL resolution=1.0, BOOLEAN directed=True, OUT REALPTR modularity

igraph_modularity_matrix:
    PARAMS: |-
        GRAPH graph,
        EDGEWEIGHTS weights=NULL,
        REAL resolution=1.0,
        OUT MATRIX modmat,
        BOOLEAN directed=True
    DEPS: weights ON graph

igraph_reindex_membership:
    PARAMS: INOUT VECTOR_INT membership, OUT VECTOR_OR_0 new_to_old

igraph_community_leading_eigenvector:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        OUT MATRIX merges, OUT VECTOR_INT membership,
        INTEGER steps=-1,
        INOUT ARPACKOPT options=arpack_defaults,
        OUT REALPTR modularity, BOOLEAN start=False,
        OUT VECTOR_OR_0 eigenvalues,
        OUT VECTOR_OR_0 eigenvectors,
        OUT VECTOR_OR_0 history,
        LEVCFUNC callback, EXTRA callback_extra

igraph_community_fluid_communities:
    PARAMS: |-
        GRAPH graph, INTEGER no_of_communities,
        OUT VECTOR_INT membership, OUT REALPTR modularity

igraph_community_label_propagation:
    PARAMS: |-
        GRAPH graph, OUT VECTOR_INT membership, EDGEWEIGHTS weights=NULL,
        VECTOR_OR_0 initial=NULL, VECTOR_BOOL_OR_0 fixed=NULL,
        OUT REALPTR modularity
    DEPS: weights ON graph

igraph_community_multilevel:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        REAL resolution=1.0,
        OUT VECTOR_INT membership,
        OUT MATRIX_INT_OR_0 memberships, OUT VECTOR_OR_0 modularity
    DEPS: weights ON graph

igraph_community_optimal_modularity:
    PARAMS: |-
        GRAPH graph, OUT REALPTR modularity,
        OUT VECTOR_INT_OR_0 membership,
        EDGEWEIGHTS weights=NULL
    DEPS: weights ON graph

igraph_community_leiden:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        VERTEXWEIGHTS vertex_weights=NULL,
        REAL resolution_parameter, REAL beta,
        BOOLEAN start, INOUT VECTOR_INT_OR_0 membership,
        OUT INTEGERPTR nb_clusters, OUT REALPTR quality
    DEPS: weights ON graph, vertex_weights ON graph

igraph_split_join_distance:
    PARAMS: |-
        VECTOR_INT comm1, VECTOR_INT comm2, OUT INTEGERPTR distance12,
        OUT INTEGERPTR distance21

igraph_hrg_fit:
    PARAMS: |-
        GRAPH graph, INOUT HRG hrg=Default, BOOLEAN start=False,
        INT steps=0

igraph_hrg_game:
    PARAMS: OUT GRAPH graph, HRG hrg

igraph_hrg_dendrogram:
    PARAMS: OUT GRAPH graph, HRG hrg

igraph_hrg_consensus:
    PARAMS: |-
        GRAPH graph, OUT VECTOR parents, OUT VECTOR weights,
        INOUT HRG hrg=Default, BOOLEAN start=False,
        INT num_samples=10000

igraph_hrg_predict:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSET edges, OUT VECTOR prob,
        INOUT HRG hrg=Default, BOOLEAN start=False,
        INT num_samples=10000, INT num_bins=25
    DEPS: edges ON graph

igraph_hrg_create:
    PARAMS: OUT HRG hrg, GRAPH graph, VECTOR prob
    DEPS: prob ON graph

igraph_community_infomap:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS e_weights=NULL,
        VERTEXWEIGHTS v_weights=NULL, INT nb_trials=10,
        OUT VECTOR_INT membership, OUT REALPTR codelength
    DEPS: e_weights ON graph, v_weights ON graph

igraph_graphlets:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        OUT VERTEXSETLIST cliques, OUT VECTOR Mu, INT niter=1000
    DEPS: weights ON graph, cliques ON graph

igraph_graphlets_candidate_basis:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        OUT VERTEXSETLIST cliques, OUT VECTOR thresholds
    DEPS: weights ON graph, cliques ON graph

igraph_graphlets_project:
    PARAMS: |-
        GRAPH graph, EDGEWEIGHTS weights=NULL,
        VERTEXSETLIST cliques, INOUT VECTOR Muc,
        BOOLEAN startMu=False, INT niter=1000
    DEPS: weights ON graph

#######################################
# Conversion
#######################################

igraph_get_adjacency:
    PARAMS: |-
        GRAPH graph, OUT MATRIX res, GETADJACENCY type=BOTH,
        BOOLEAN eids=False

igraph_get_edgelist:
    PARAMS: GRAPH graph, OUT VECTOR res, BOOLEAN bycol=False

igraph_to_directed:
    PARAMS: INOUT GRAPH graph, TODIRECTED flags=MUTUAL

igraph_to_undirected:
    PARAMS: |-
        INOUT GRAPH graph, TOUNDIRECTED mode=COLLAPSE,
        EDGE_ATTRIBUTE_COMBINATION edge_attr_comb=Default

igraph_get_stochastic:
    PARAMS: GRAPH graph, OUT MATRIX res, BOOLEAN column_wise=False

igraph_get_stochastic_sparsemat:
    PARAMS: |-
        GRAPH graph, OUT SPARSEMATPTR sparsemat,
        BOOLEAN column_wise=False

#######################################
# Read and write foreign formats
#######################################

igraph_read_graph_edgelist:
    PARAMS: OUT GRAPH graph, INFILE instream, INTEGER n=0, BOOLEAN directed=True

igraph_read_graph_ncol:
    PARAMS: |-
        OUT GRAPH graph, INFILE instream, STRVECTOR_OR_0 predefnames,
        BOOLEAN names=True, ADD_WEIGHTS weights=True, BOOLEAN directed=True

igraph_read_graph_lgl:
    PARAMS: |-
        OUT GRAPH graph, INFILE instream, BOOLEAN names=True,
        ADD_WEIGHTS weights=True, BOOLEAN directed=True

igraph_read_graph_pajek:
    PARAMS: OUT GRAPH graph, INFILE instream

igraph_read_graph_graphml:
    PARAMS: OUT GRAPH graph, INFILE instream, INT index=0

igraph_read_graph_dimacs:
    PARAMS: |-
        OUT GRAPH graph, INFILE instream, OUT INTEGERPTR source,
        OUT INTEGERPTR target, OUT VECTOR capacity, BOOLEAN directed=True

igraph_read_graph_graphdb:
    PARAMS: OUT GRAPH graph, INFILE instream, BOOLEAN directed=False

igraph_read_graph_gml:
    PARAMS: OUT GRAPH graph, INFILE instream

igraph_read_graph_dl:
    PARAMS: OUT GRAPH graph, INFILE instream, BOOLEAN directed=True

igraph_write_graph_edgelist:
    PARAMS: GRAPH graph, OUTFILE outstream

igraph_write_graph_ncol:
    PARAMS: GRAPH graph, OUTFILE outstream, CSTRING names="name", CSTRING weights="weight"

igraph_write_graph_lgl:
    PARAMS: |-
        GRAPH graph, OUTFILE outstream, CSTRING names="name", CSTRING weights="weight",
        BOOLEAN isolates=True

igraph_write_graph_leda:
    PARAMS: GRAPH graph, OUTFILE outstream, CSTRING names="name", CSTRING weights="weight"

igraph_write_graph_graphml:
    PARAMS: GRAPH graph, OUTFILE outstream, BOOLEAN prefixattr=True

igraph_write_graph_pajek:
    PARAMS: GRAPH graph, OUTFILE outstream

igraph_write_graph_dimacs:
    PARAMS: |-
        GRAPH graph, OUTFILE outstream, LONGINT source=0, LONGINT target=0,
        VECTOR capacity

igraph_write_graph_gml:
    PARAMS: GRAPH graph, OUTFILE outstream, VECTOR id, CSTRING creator="igraph"

igraph_write_graph_dot:
    PARAMS: GRAPH graph, OUTFILE outstream

#######################################
# Motifs
#######################################

igraph_motifs_randesu:
    PARAMS: GRAPH graph, OUT VECTOR hist, INT size=3, VECTOR cut_prob

igraph_motifs_randesu_estimate:
    PARAMS: |-
        GRAPH graph, OUT INTEGERPTR est, INT size=3, VECTOR cut_prob,
        INTEGER sample_size, VECTOR_OR_0 sample

igraph_motifs_randesu_no:
    PARAMS: GRAPH graph, OUT INTEGERPTR no, INT size=3, VECTOR cut_prob

igraph_dyad_census:
    PARAMS: GRAPH graph, OUT INTEGERPTR mut, OUT INTEGERPTR asym, OUT INTEGERPTR null
    RETURN: ERROR

igraph_triad_census:
    PARAMS: GRAPH graph, OUT VECTOR res
    RETURN: ERROR

igraph_adjacent_triangles:
    PARAMS: GRAPH graph, OUT VECTOR res, VERTEXSET vids=ALL
    DEPS: vids ON graph

igraph_local_scan_0:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, EDGEWEIGHTS weights=NULL,
        NEIMODE mode=OUT
    DEPS: weights ON graph

igraph_local_scan_0_them:
    PARAMS: |-
        GRAPH us, GRAPH them, OUT VECTOR res,
        EDGEWEIGHTS weights_them=NULL, NEIMODE mode=OUT
    DEPS: weights_them ON them

igraph_local_scan_1_ecount:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, EDGEWEIGHTS weights=NULL,
        NEIMODE mode=OUT
    DEPS: weights ON graph

igraph_local_scan_1_ecount_them:
    PARAMS: |-
        GRAPH us, GRAPH them, OUT VECTOR res,
        EDGEWEIGHTS weights_them=NULL, NEIMODE mode=OUT
    DEPS: weights_them ON them

igraph_local_scan_k_ecount:
    PARAMS: |-
        GRAPH graph, INT k, OUT VECTOR res, EDGEWEIGHTS weights=NULL,
        NEIMODE mode=OUT
    DEPS: weights ON graph

igraph_local_scan_k_ecount_them:
    PARAMS: |-
        GRAPH us, GRAPH them, INT k, OUT VECTOR res,
        EDGEWEIGHTS weights_them=NULL, NEIMODE mode=OUT
    DEPS: weights_them ON them

igraph_local_scan_neighborhood_ecount:
    PARAMS: |-
        GRAPH graph, OUT VECTOR res, EDGEWEIGHTS weights=NULL,
        VERTEXSETLIST_INT neighborhoods
    DEPS: weights ON graph

igraph_list_triangles:
    PARAMS: GRAPH graph, OUT VERTEXSET_INT res
    DEPS: res ON graph

#######################################
# Graph operators
#######################################

igraph_disjoint_union:
    PARAMS: |-
        OUT GRAPH res, GRAPH left, GRAPH right,
        OUT EDGESET edge_map_left, OUT EDGESET edge_map_right
    DEPS: edge_map_left ON left, edge_map_right ON right

igraph_disjoint_union_many:
    PARAMS: OUT GRAPH res, GRAPHLIST graphs, OUT VECTORLIST edgemaps

igraph_union:
    PARAMS: OUT GRAPH res, GRAPH left, GRAPH right

igraph_union_many:
    PARAMS: OUT GRAPH res, GRAPHLIST graphs

igraph_intersection:
    PARAMS: OUT GRAPH res, GRAPH left, GRAPH right

igraph_intersection_many:
    PARAMS: OUT GRAPH res, GRAPHLIST graphs

igraph_difference:
    PARAMS: OUT GRAPH res, GRAPH orig, GRAPH sub

igraph_complementer:
    PARAMS: OUT GRAPH res, GRAPH graph, BOOLEAN loops=False

igraph_compose:
    PARAMS: OUT GRAPH res, GRAPH g1, GRAPH g2

#######################################
# Maximum flows, minimum cuts
#######################################

igraph_maxflow:
    PARAMS: |-
        GRAPH graph, OUT REALPTR value, OUT VECTOR_OR_0 flow,
        OUT VECTORM1_OR_0 cut, OUT VERTEXSET_OR_0 partition1,
        OUT VERTEXSET_OR_0 partition2, VERTEX source, VERTEX target,
        EDGECAPACITY capacity=NULL, OUT MAXFLOW_STATS stats
    DEPS: |-
        capacity ON graph, source ON graph, target ON graph,
        partition1 ON graph, partition2 ON graph, flow ON graph,
        cut ON graph

igraph_maxflow_value:
    PARAMS: |-
        GRAPH graph, OUT REALPTR value, VERTEX source, VERTEX target,
        VECTOR_OR_0 capacity, OUT MAXFLOW_STATS stats
    DEPS: source ON graph, target ON graph

igraph_mincut_value:
    PARAMS: GRAPH graph, OUT REALPTR res, VECTOR_OR_0 capacity

igraph_st_mincut_value:
    PARAMS: |-
        GRAPH graph, OUT REALPTR res, VERTEX source, VERTEX target,
        VECTOR_OR_0 capacity
    DEPS: source ON graph, target ON graph

igraph_mincut:
    PARAMS: |-
        GRAPH graph, OUT REALPTR value, OUT VECTORM1 partition1,
        OUT VECTORM1 partition2, OUT VECTORM1 cut, VECTOR_OR_0 capacity

igraph_st_vertex_connectivity:
    PARAMS: |-
        GRAPH graph, OUT INTEGERPTR res, VERTEX source, VERTEX target,
        VCONNNEI neighbors=NUMBER_OF_NODES
    DEPS: source ON graph, target ON graph

igraph_vertex_connectivity:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, BOOLEAN checks=True

igraph_st_edge_connectivity:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, VERTEX source, VERTEX target
    DEPS: source ON graph, target ON graph

igraph_edge_connectivity:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, BOOLEAN checks=True

igraph_edge_disjoint_paths:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, VERTEX source, VERTEX target
    DEPS: source ON graph, target ON graph

igraph_vertex_disjoint_paths:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, VERTEX source, VERTEX target
    DEPS: source ON graph, target ON graph

igraph_adhesion:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, BOOLEAN checks=True

igraph_cohesion:
    PARAMS: GRAPH graph, OUT INTEGERPTR res, BOOLEAN checks=True

#######################################
# Listing s-t cuts, separators
#######################################

igraph_dominator_tree:
    PARAMS: |-
        GRAPH graph, VERTEX root, OUT VERTEXSET dom,
        OUT GRAPH_OR_0 domtree, OUT VERTEXSET leftout,
        INOUTMODE mode=OUT
    DEPS: root ON graph, dom ON graph, leftout ON graph

igraph_all_st_cuts:
    PARAMS: |-
        GRAPH graph, OUT EDGESETLIST_OR_0 cuts,
        OUT VERTEXSETLIST_OR_0 partition1s,
        VERTEX source, VERTEX target
    DEPS: |-
        source ON graph, target ON graph, cuts ON graph,
        partition1s ON graph

igraph_all_st_mincuts:
    PARAMS: |-
        GRAPH graph, OUT REALPTR value,
        OUT EDGESETLIST_OR_0 cuts,
        OUT VERTEXSETLIST_OR_0 partition1s,
        VERTEX source, VERTEX target, EDGEWEIGHTS capacity=NULL
    DEPS: |-
        capacity ON graph, source ON graph, target ON graph,
        cuts ON graph, partition1s ON graph

igraph_is_separator:
    PARAMS: GRAPH graph, VERTEXSET candidate, OUT BOOLEANPTR res
    DEPS: candidate ON graph

igraph_is_minimal_separator:
    PARAMS: GRAPH graph, VERTEXSET candidate, OUT BOOLEANPTR res
    DEPS: candidate ON graph

igraph_all_minimal_st_separators:
    PARAMS: GRAPH graph, OUT VERTEXSETLIST separators
    DEPS: separators ON graph

igraph_minimum_size_separators:
    PARAMS: GRAPH graph, OUT VERTEXSETLIST separators
    DEPS: separators ON graph

igraph_cohesive_blocks:
    PARAMS: |-
        GRAPH graph, OUT VERTEXSETLIST blocks,
        OUT VECTOR cohesion, OUT VECTORM1 parent,
        OUT GRAPH blockTree
    DEPS: blocks ON graph

#######################################
# K-Cores
#######################################

igraph_coreness:
    PARAMS: GRAPH graph, OUT VECTOR_INT cores, NEIMODE mode=ALL

#######################################
# Graph isomorphism
#######################################

igraph_isoclass:
    PARAMS: GRAPH graph, OUT INTEGERPTR isoclass

igraph_isomorphic:
    PARAMS: GRAPH graph1, GRAPH graph2, OUT BOOLEANPTR iso

igraph_isoclass_subgraph:
    PARAMS: GRAPH graph, VECTOR vids, OUT INTEGERPTR isoclass
    DEPS: vids ON graph

igraph_isoclass_create:
    PARAMS: OUT GRAPH graph, INTEGER size, INTEGER number, BOOLEAN directed=True

igraph_isomorphic_vf2:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2,
        VERTEX_COLOR vertex_color1, VERTEX_COLOR vertex_color2,
        EDGE_COLOR edge_color1, EDGE_COLOR edge_color2,
        OUT BOOLEANPTR iso,
        OUT VECTORM1_OR_0 map12, OUT VECTORM1_OR_0 map21,
        NULL node_compat_fn, NULL edge_compat_fn,
        NULL extra
    DEPS: |-
        vertex_color1 ON graph1, vertex_color2 ON graph2,
        edge_color1 ON graph1, edge_color2 ON graph2

igraph_count_isomorphisms_vf2:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2,
        VERTEX_COLOR vertex_color1, VERTEX_COLOR vertex_color2,
        EDGE_COLOR edge_color1, EDGE_COLOR edge_color2,
        OUT INTEGERPTR count, NULL node_compat_fn,
        NULL edge_compat_fn, NULL extra
    DEPS: |-
        vertex_color1 ON graph1, vertex_color2 ON graph2,
        edge_color1 ON graph1, edge_color2 ON graph2

igraph_get_isomorphisms_vf2:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2,
        VERTEX_COLOR vertex_color1, VERTEX_COLOR vertex_color2,
        EDGE_COLOR edge_color1, EDGE_COLOR edge_color2,
        OUT VECTORLIST maps, NULL node_compat_fn,
        NULL edge_compat_fn, NULL extra
    DEPS: |-
        vertex_color1 ON graph1, vertex_color2 ON graph2,
        edge_color1 ON graph1, edge_color2 ON graph2

igraph_subisomorphic_vf2:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2,
        VERTEX_COLOR vertex_color1, VERTEX_COLOR vertex_color2,
        EDGE_COLOR edge_color1, EDGE_COLOR edge_color2,
        OUT BOOLEANPTR iso,
        OUT VECTORM1_OR_0 map12, OUT VECTORM1_OR_0 map21,
        NULL node_compat_fn, NULL edge_compat_fn,
        NULL extra
    DEPS: |-
        vertex_color1 ON graph1, vertex_color2 ON graph2,
        edge_color1 ON graph1, edge_color2 ON graph2

igraph_count_subisomorphisms_vf2:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2,
        VERTEX_COLOR vertex_color1, VERTEX_COLOR vertex_color2,
        EDGE_COLOR edge_color1, EDGE_COLOR edge_color2,
        OUT INTEGERPTR count, NULL node_compat_fn,
        NULL edge_compat_fn, NULL extra
    DEPS: |-
        vertex_color1 ON graph1, vertex_color2 ON graph2,
        edge_color1 ON graph1, edge_color2 ON graph2

igraph_get_subisomorphisms_vf2:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2,
        VERTEX_COLOR vertex_color1, VERTEX_COLOR vertex_color2,
        EDGE_COLOR edge_color1, EDGE_COLOR edge_color2,
        OUT VECTORLIST maps, NULL node_compat_fn,
        NULL edge_compat_fn, NULL extra
    DEPS: |-
        vertex_color1 ON graph1, vertex_color2 ON graph2,
        edge_color1 ON graph1, edge_color2 ON graph2

igraph_isomorphic_34:
    PARAMS: GRAPH graph1, GRAPH graph2, OUT BOOLEANPTR iso

igraph_canonical_permutation:
    PARAMS: GRAPH graph, NULL colors, OUT VECTORM1 labeling, BLISSSH sh="fm", OUT
        BLISSINFO info

igraph_permute_vertices:
    PARAMS: GRAPH graph, OUT GRAPH res, VECTOR_INT_M1 permutation

igraph_isomorphic_bliss:
    PARAMS: |-
        GRAPH graph1, GRAPH graph2, NULL colors1, NULL colors2,
        OUT BOOLEANPTR iso, OUT VECTORM1_OR_0 map12,
        OUT VECTORM1_OR_0 map21, BLISSSH sh="fm",
        OUT BLISSINFO info1, OUT BLISSINFO info2

igraph_automorphisms:
    PARAMS: GRAPH graph, NULL colors, BLISSSH sh="fm", OUT BLISSINFO info

igraph_subisomorphic_lad:
    PARAMS: |-
        GRAPH pattern, GRAPH target, VERTEXSETLIST_OR_0 domains,
        OUT BOOLEANPTR_OR_0 iso, OUT VECTOR_OR_0 map,
        OUT VECTORLIST_OR_0 maps, BOOLEAN induced, INT time_limit

#######################################
# SCG
#######################################

igraph_scg_grouping:
    PARAMS: |-
        MATRIX V, OUT VECTORM1 groups, INTEGER nt,
        VECTOR_OR_0 nt_vec, SCGMAT mtype=Default,
        SCGALGO algo=Default, VECTOR_OR_0 p=NULL,
        INTEGER maxiter=100

igraph_scg_semiprojectors:
    PARAMS: |-
        VECTORM1 groups, SCGMAT mtype=Default,
        OUT MATRIX_OR_0 L, OUT MATRIX_OR_0 R,
        OUT SPARSEMATPTR_OR_0 Lsparse, OUT SPARSEMATPTR_OR_0 Rsparse,
        VECTOR_OR_0 p=NULL, SCGNORM norm=Default

igraph_scg_norm_eps:
    PARAMS: |-
        MATRIX V, VECTORM1 groups, OUT VECTOR eps,
        SCGMAT mtype=Default, VECTOR_OR_0 p=NULL,
        SCGNORM norm=Default

igraph_scg_adjacency:
    PARAMS: |-
        GRAPH_OR_0 graph, MATRIX_OR_0 matrix,
        SPARSEMAT_OR_0 sparsemat, VECTOR ev,
        INTEGER nt, VECTOR_OR_0 ntvec,
        SCGALGO algo, INOUT VECTOR_OR_0 values,
        INOUT MATRIX_OR_0 vectors, INOUT VECTORM1_OR_0 groups,
        BOOLEAN use_arpack=False, INTEGER maxiter,
        OUT GRAPH_OR_0 scg_graph, OUT MATRIX_OR_0 scg_matrix,
        OUT SPARSEMAT_OR_0 scg_sparsemat, OUT MATRIX_OR_0 L,
        OUT MATRIX_OR_0 R, OUT SPARSEMATPTR_OR_0 Lsparse,
        OUT SPARSEMATPTR_OR_0 Rsparse

igraph_scg_stochastic:
    PARAMS: |-
        GRAPH_OR_0 graph, MATRIX_OR_0 matrix,
        SPARSEMAT_OR_0 sparsemat, VECTOR ev,
        INTEGER nt, VECTOR_OR_0 nt_vec,
        SCGALGO algo, SCGNORM norm=Default,
        INOUT CVECTOR_OR_0 values, INOUT CMATRIX_OR_0 vectors,
        INOUT VECTORM1_OR_0 groups, INOUT VECTOR_OR_0 p,
        BOOLEAN use_arpack=False, INTEGER maxiter,
        OUT GRAPH_OR_0 scg_graph, OUT MATRIX_OR_0 scg_matrix,
        OUT SPARSEMAT_OR_0 scg_sparsemat, OUT MATRIX_OR_0 L,
        OUT MATRIX_OR_0 R, OUT SPARSEMATPTR_OR_0 Lsparse,
        OUT SPARSEMATPTR_OR_0 Rsparse

igraph_scg_laplacian:
    PARAMS: |-
        GRAPH_OR_0 graph, MATRIX_OR_0 matrix,
        SPARSEMAT_OR_0 sparsemat, VECTOR ev,
        INTEGER nt, VECTOR_OR_0 nt_vec,
        SCGALGO algo, SCGNORM norm=Default,
        SCGDIR direction=Default, INOUT CVECTOR_OR_0 values,
        INOUT CMATRIX_OR_0 vectors, INOUT VECTORM1_OR_0 groups,
        BOOLEAN use_arpack=False, INTEGER maxiter,
        OUT GRAPH_OR_0 scg_graph, OUT MATRIX_OR_0 scg_matrix,
        OUT SPARSEMAT_OR_0 scg_sparsemat, OUT MATRIX_OR_0 L,
        OUT MATRIX_OR_0 R, OUT SPARSEMATPTR_OR_0 Lsparse,
        OUT SPARSEMATPTR_OR_0 Rsparse

#######################################
# Matching
#######################################

igraph_is_matching:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES_OR_0 types=NULL,
        VECTOR_LONG_M1 matching, OUT BOOLEANPTR res
    DEPS: types ON graph, matching ON graph

igraph_is_maximal_matching:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES_OR_0 types=NULL,
        VECTOR_LONG_M1 matching, OUT BOOLEANPTR res
    DEPS: types ON graph

igraph_maximum_bipartite_matching:
    PARAMS: |-
        GRAPH graph, BIPARTITE_TYPES_OR_0 types=NULL,
        OUT INTEGERPTR_OR_0 matching_size,
        OUT REALPTR_OR_0 matching_weight,
        OUT VECTOR_LONG_M1 matching,
        EDGEWEIGHTS weights=NULL, REAL eps=.Machine$double.eps
    DEPS: types ON graph, weights ON graph

#######################################
# Embedding
#######################################

igraph_adjacency_spectral_embedding:
    PARAMS: |-
        GRAPH graph, INTEGER no, EDGEWEIGHTS weights=NULL,
        EIGENWHICHPOS which=ASE, BOOLEAN scaled=True, OUT MATRIX X,
        OUT MATRIX_OR_0 Y, OUT VECTOR_OR_0 D,
        VECTOR cvec=AsmDefaultCvec,
        INOUT ARPACKOPT options=igraph.arpack.default
    DEPS: weights ON graph, cvec ON graph

igraph_laplacian_spectral_embedding:
    PARAMS: |-
        GRAPH graph, INTEGER no, EDGEWEIGHTS weights=NULL,
        EIGENWHICHPOS which=ASE,
        LSETYPE type=Default, BOOLEAN scaled=True, OUT MATRIX X,
        OUT MATRIX_OR_0 Y, OUT VECTOR_OR_0 D,
        INOUT ARPACKOPT options=igraph.arpack.default
    DEPS: weights ON graph, type ON graph

#######################################
# Eigensolvers
#######################################

igraph_eigen_adjacency:
    PARAMS: |-
        GRAPH graph, EIGENALGO algorithm=ARPACK,
        EIGENWHICH which=Default,
        INOUT ARPACKOPT options=arpack_defaults,
        NULL storage, OUT VECTOR values, OUT MATRIX vectors,
        NULL cmplxvalues, NULL cmplxvectors

#######################################
# Fitting power laws
#######################################

igraph_power_law_fit:
    PARAMS: |-
        VECTOR data, OUT PLFIT res, REAL xmin=-1,
        BOOLEAN force_continuous=False

#######################################
# Dynamics, on networks
#######################################

igraph_sir:
    PARAMS: |-
        GRAPH graph, REAL beta, REAL gamma, INTEGER no_sim=100,
        OUT SIRLIST res

#######################################
# Other, not graph related
#######################################

igraph_running_mean:
    PARAMS: VECTOR data, OUT VECTOR res, INTEGER binwidth

igraph_random_sample:
    PARAMS: OUT VECTOR res, INTEGER l, INTEGER h, INTEGER length

igraph_convex_hull:
    PARAMS: MATRIX data, OUT VECTOR_INT resverts, OUT MATRIX rescoords

igraph_dim_select:
    PARAMS: VECTOR sv, OUT INTEGERPTR dim

#######################################
# Eulerian functions
#######################################

igraph_is_eulerian:
    PARAMS: GRAPH graph, BOOL has_path, BOOL has_cycle

igraph_eulerian_path:
    PARAMS: GRAPH graph, VECTOR res

igraph_eulerian_cycle:
    PARAMS: GRAPH graph, VECTOR res

#######################################
# Other, (yet) undocumented functions
#######################################

igraph_convergence_degree:
    PARAMS: GRAPH graph, OUT VECTOR result, OUT VECTOR in, OUT VECTOR out
